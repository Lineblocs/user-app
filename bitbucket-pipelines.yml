image: php:7.1.3
pipelines:
  default:
    - step:
        name: Build
        script:
          - apt-get update && apt-get install -y curl zip unzip
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - ./aws/install
          - aws --version
          - aws configure set aws_access_key_id "${AWS_KEY}"
          - aws configure set aws_secret_access_key "${AWS_SECRET}"
          - aws=$(aws ecr get-login-password --region ca-central-1)
          - echo $aws | docker login --username AWS --password-stdin 754569496111.dkr.ecr.ca-central-1.amazonaws.com
          - echo "aws=$aws" > ENVIRONMENT_VARIABLES.txt
          # build the Docker image (this will use the Dockerfile in the root of the repo)
          - docker build --memory=3072M -t lineblocs-app .
          - docker tag lineblocs-app:latest 754569496111.dkr.ecr.ca-central-1.amazonaws.com/lineblocs-app:latest
          - docker push 754569496111.dkr.ecr.ca-central-1.amazonaws.com/lineblocs-app:latest
        artifacts: # define the artifacts to be passed to each future step
          - ENVIRONMENT_VARIABLES.txt
        services:
          - docker
    - step:
        name: Deploy
        deployment: production
        image: atlassian/pipelines-kubectl
        script:
          # Download and install `doctl` so that we can refresh configs for k8s
          - apk --no-cache add curl
          - load=$(cat ENVIRONMENT_VARIABLES.txt) && echo $load
          - export $(cat ENVIRONMENT_VARIABLES.txt | xargs)
          - |
echo '{ "auths":{ "754569496111.dkr.ecr.ca-central-1.amazonaws.com":{ "auth":"'"$aws"'" } }, "HttpHeaders":{ "User-Agent":"Docker-Client/19.03.11 (linux)" } }' > ./creds.json
          - curl -sL https://github.com/digitalocean/doctl/releases/download/v1.27.0/doctl-1.27.0-linux-amd64.tar.gz | tar -xzv
          - mv ./doctl /usr/local/bin
          - doctl -t $DOCTL_TOKEN k8s cluster kubeconfig show ${K8S_CLUSTER_NAME} > kubeconfig.yml
          - kubectl --insecure-skip-tls-verify --kubeconfig=kubeconfig.yml delete secret lineblocs-regcred
          - kubectl --insecure-skip-tls-verify --kubeconfig=kubeconfig.yml create secret generic lineblocs-regcred  --from-file=.dockerconfigjson=./creds.json  --type=kubernetes.io/dockerconfigjson
          - kubectl --insecure-skip-tls-verify --kubeconfig=kubeconfig.yml patch deployment lineblocs-app -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
